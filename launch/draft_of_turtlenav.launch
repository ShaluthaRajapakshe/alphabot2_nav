<launch>
  <!--
    $ sudo apt install ros-melodic-turtlebot3* ros-melodic-dwa-local-planner
    To avoid TF warning about leading '/' in frame name, remove it in:
       - "/opt/ros/melodic/share/turtlebot3_navigation/param/global_costmap_params.yaml"
       - "/opt/ros/melodic/share/turtlebot3_navigation/param/local_costmap_params.yaml"

    Example Gazebo:
    $ export TURTLEBOT3_MODEL=waffle
    $ roslaunch turtlebot3_gazebo turtlebot3_world.launch

    $ export TURTLEBOT3_MODEL=waffle
    $ roslaunch rtabmap_ros demo_turtlebot3_navigation.launch
  -->

  <!-- Arguments -->
  <arg name="open_rviz" default="true"/>
  <arg name="rtabmapviz" default="true"/>
  <arg name="move_forward_only" default="false"/>

  <arg name="with_camera" default="true"/>
  <!--arg name="localization" default="false"/-->
  <arg name="localization" default="true"/>
  <arg name="database_path" default="~/.ros/rtabmap.db"/>
  <arg     if="$(arg localization)" name="rtabmap_args" default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args" default="-d"/>
  
  <arg name="compressed"              default="true"/>
  
  <arg name="rgbd_sync"               default="false"/>         <!-- pre-sync rgb_topic, depth_topic, camera_info_topic -->

    <!-- RGB-D related topics -->
  <arg name="rgb_topic"               default="/camera/color/image_raw" />
  <arg name="depth_topic"             default="/camera/aligned_depth_to_color/image_raw" />
  <arg name="camera_info_topic"       default="/camera/color/camera_info" />
  <arg name="rgbd_topic"             default="rgbd_image" />
  <arg name="depth_camera_info_topic" default="$(arg camera_info_topic)" />
  <arg name="vo" default="true" />
  
  
  <!-- These arguments should not be modified directly, see referred topics without "_relay" suffix above -->
  <arg if="$(arg compressed)"     name="rgb_topic_relay"           default="$(arg rgb_topic)_relay"/>
  <arg unless="$(arg compressed)" name="rgb_topic_relay"           default="$(arg rgb_topic)"/>
  <arg if="$(arg compressed)"     name="depth_topic_relay"         default="$(arg depth_topic)_relay"/>
  <arg unless="$(arg compressed)" name="depth_topic_relay"         default="$(arg depth_topic)"/>
  <arg if="$(arg rgbd_sync)"      name="rgbd_topic_relay"          default="$(arg rgbd_topic)"/>
  <arg unless="$(arg rgbd_sync)"  name="rgbd_topic_relay"          default="$(arg rgbd_topic)_relay"/>

 

  <group ns="rtabmap">
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
	  <param name="database_path"       type="string" value="$(arg database_path)"/>
	  <param name="frame_id"            type="string" value="base_footprint"/>
          <param     if="$(eval model=='waffle')" name="subscribe_rgb" type="bool" value="true"/>
          <param unless="$(eval model=='waffle')" name="subscribe_rgb" type="bool" value="false"/>
          <param     if="$(eval model=='waffle')" name="subscribe_depth" type="bool" value="true"/>
          <param unless="$(eval model=='waffle')" name="subscribe_depth" type="bool" value="false"/>
	  <param name="subscribe_scan"      type="bool"   value="true"/>
          <param name="approx_sync"         type="bool"   value="true"/>

          <!-- use actionlib to send goals to move_base --> 
	  <param name="use_action_for_goal" type="bool" value="true"/>
          <remap from="move_base"            to="/move_base"/>
	
	  <!-- inputs -->
	  <remap from="scan"            to="/scan"/>
	  <remap from="odom"            to="/odom"/>
	  <!--remap from="rgb/image"       to="/camera/rgb/image_raw"/-->
	  <remap from="rgb/image"       to="/camera/data_throttled_image"/>
  	  <!--remap from="depth/image"     to="/camera/depth/image_raw"/-->
  	  <remap from="depth/image"     to="/camera/data_throttled_image_depth"/>
  	  <!--remap from="rgb/camera_info" to="/camera/rgb/camera_info"/-->
  	  <remap from="rgb/camera_info" to="/camera/data_throttled_camera_info"/>

  	  <!-- output -->
  	  <remap from="grid_map" to="/map"/>
	
	  <!-- RTAB-Map's parameters -->
	  <param name="Reg/Strategy"                 type="string" value="1"/>
	  <param name="Reg/Force3DoF"                type="string" value="true"/>
	  <param name="GridGlobal/MinSize"           type="string" value="20"/>

	  <!-- localization mode -->
	  <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
	  <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
    </node>
    
       <!-- RGB-D Odometry -->
    <node   if="$(arg vo)" pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen" >
       <remap from="rgb/image"       to="$(arg rgb_topic_relay)"/>
       <remap from="depth/image"     to="$(arg depth_topic_relay)"/>
       <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
       <remap from="rgbd_image"      to="$(arg rgbd_topic_relay)"/>
   
       <!--<remap from="odom"            to="$(arg odom_topic)"/>-->
      
       <param name="frame_id"                    type="string" value="base_footprint"/>
       <param name="odom_frame_id"               type="string" value="odom"/>
       <param name="wait_for_transform_duration" type="double" value="0.01"/>
       <param name="approx_sync"                 type="bool"   value="true"/>
       <param name="queue_size"                  type="int"    value="$(arg queue_size)"/>
       <param name="subscribe_rgbd"              type="bool"   value="false"/>
       <param name="publish_tf" type="bool" value="true"/>

     </node>
 

        <!-- visualization with rtabmapviz -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_scan"   type="bool"   value="true"/>
      <param name="subscribe_odom"   type="bool"   value="true"/>
      <param name="frame_id"         type="string" value="base_footprint"/>
      <param name="approx_sync"      type="bool"   value="true"/>

      <remap from="odom"            to="/odom"/>
      <remap from="scan"            to="/scan"/>
    </node>
  </group>
  
    <!-- Laser topic -->
    <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
	<remap from="image" to="/camera/depth/image_rect_raw"/>
	<remap from="camera_info" to="/camera/depth/camera_info"/>
 	<param name="range_min" value="0.1"/>
	<param name="range_max" value="3"/>
	
		<!--<param name="frame_id" value="camera_link" default is camera_depth_frame />--> 
    </node>

  <!-- move_base -->
  <include file="$(find alphabot2_nav)/launch/turtle_movebase.launch">
   
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>

</launch>
